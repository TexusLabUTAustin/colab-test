{"ast":null,"code":"var _jsxFileName = \"/Users/pg27378/Documents/Co-labwebsite/colab-test/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport CoLab from './Components/CoLab'; // Adjust the import path according to your project structure\nimport './App.css'; // Assuming you have some general styles for your app\nimport About from './Components/Pages/About';\nimport Footer from './Components/Footer';\nimport ScrollToTop from './Components/ScrollToTop';\nimport Contact from './Components/Pages/Contact';\nimport Maintenance from './Components/Pages/Maintenance';\nimport NavbarHero from './Components/NavbarHero';\nimport ProjectContentPage from './Components/ProjectContentPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [projects, setProjects] = useState([]);\n  useEffect(() => {\n    // Fetch the YAML data from your file\n    fetch(process.env.PUBLIC_URL + \"/Projects.yaml\").then(response => response.text()).then(yamlData => {\n      // Parse the YAML data into an array of objects\n      const parsedProjects = yaml.load(yamlData);\n      setProjects(parsedProjects);\n\n      // Create a data structure that associates people with projects\n      const peopleProjectsData = {};\n      parsedProjects.forEach(project => {\n        const collaborators = project.Collaborators.split(\",\").map(name => name.trim());\n        collaborators.forEach(collaborator => {\n          // Replace spaces in names with underscores and convert to lowercase\n          const formattedName = collaborator.replace(/\\s+/g, \"_\").toLowerCase();\n          if (!peopleProjectsData[formattedName]) {\n            peopleProjectsData[formattedName] = [];\n          }\n          peopleProjectsData[formattedName].push(project);\n        });\n      });\n      setPeopleProjects(peopleProjectsData);\n    }).catch(error => {\n      console.error(\"Error fetching or parsing YAML file:\", error);\n    });\n    console.log(peopleProjects);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(ScrollToTop, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(CoLab, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/about\",\n          element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/contact\",\n          element: /*#__PURE__*/_jsxDEV(Contact, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/projects\",\n          element: /*#__PURE__*/_jsxDEV(Maintenance, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), projects.map((project, index) => {\n          console.log(`Generating route for ${project.targetSection}`);\n          return /*#__PURE__*/_jsxDEV(Route, {\n            path: `/content/${project.targetSection}`,\n            element: /*#__PURE__*/_jsxDEV(ProjectContentPage, {\n              project: project\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 26\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"TSrpuQX6QU8EgjQSxaAzj2u9i4o=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","BrowserRouter","Router","Route","Routes","CoLab","About","Footer","ScrollToTop","Contact","Maintenance","NavbarHero","ProjectContentPage","jsxDEV","_jsxDEV","App","_s","projects","setProjects","fetch","process","env","PUBLIC_URL","then","response","text","yamlData","parsedProjects","yaml","load","peopleProjectsData","forEach","project","collaborators","Collaborators","split","map","name","trim","collaborator","formattedName","replace","toLowerCase","push","setPeopleProjects","catch","error","console","log","peopleProjects","children","fileName","_jsxFileName","lineNumber","columnNumber","className","path","element","index","targetSection","_c","$RefreshReg$"],"sources":["/Users/pg27378/Documents/Co-labwebsite/colab-test/src/App.js"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport CoLab from './Components/CoLab'; // Adjust the import path according to your project structure\nimport './App.css'; // Assuming you have some general styles for your app\nimport About from './Components/Pages/About';\nimport Footer from './Components/Footer';\nimport ScrollToTop from './Components/ScrollToTop';\nimport Contact from './Components/Pages/Contact';\nimport Maintenance from './Components/Pages/Maintenance';\nimport NavbarHero from './Components/NavbarHero';\nimport ProjectContentPage from './Components/ProjectContentPage';\n\nfunction App() {\n  const [projects, setProjects] = useState([]);\n\n  useEffect(() => {\n    // Fetch the YAML data from your file\n    fetch(process.env.PUBLIC_URL + \"/Projects.yaml\")\n      .then((response) => response.text())\n      .then((yamlData) => {\n        // Parse the YAML data into an array of objects\n        const parsedProjects = yaml.load(yamlData);\n\n        setProjects(parsedProjects);\n\n        // Create a data structure that associates people with projects\n        const peopleProjectsData = {};\n        parsedProjects.forEach((project) => {\n          const collaborators = project.Collaborators.split(\",\").map((name) =>\n            name.trim()\n          );\n          collaborators.forEach((collaborator) => {\n            // Replace spaces in names with underscores and convert to lowercase\n            const formattedName = collaborator\n              .replace(/\\s+/g, \"_\")\n              .toLowerCase();\n            if (!peopleProjectsData[formattedName]) {\n              peopleProjectsData[formattedName] = [];\n            }\n            peopleProjectsData[formattedName].push(project);\n          });\n        });\n        setPeopleProjects(peopleProjectsData);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching or parsing YAML file:\", error);\n      });\n\n    console.log(peopleProjects);\n  }, []);\n\n  return (\n    <Router>\n      <ScrollToTop />\n      <div className=\"App\">\n        <Routes>\n          <Route path=\"/\" element={<CoLab />}/>\n          <Route path=\"/about\" element={<About />}/>\n          <Route path=\"/contact\" element={<Contact />}/>\n          <Route path=\"/projects\" element={<Maintenance />}/>\n          {projects.map((project, index) => {\n            console.log(`Generating route for ${project.targetSection}`);\n            return (\n              <Route\n                key={index}\n                path={`/content/${project.targetSection}`}\n                element={<ProjectContentPage project={project} />}\n              />\n            );\n          })}\n          {/* Add more Route components here for other pages */}\n        </Routes>\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}