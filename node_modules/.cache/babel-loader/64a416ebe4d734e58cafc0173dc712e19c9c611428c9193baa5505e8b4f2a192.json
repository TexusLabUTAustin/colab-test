{"ast":null,"code":"var _jsxFileName = \"/Users/pg27378/Documents/Co-labwebsite/colab-test/src/Components/ProjectContentPage.js\";\nimport React from 'react';\nimport './ProjectContentPage.css'; // Import the CSS file\nimport { Link } from 'react-router-dom';\nimport { collaboratorData } from './CollaboratorData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ProjectContentPage({\n  project,\n  projectList\n}) {\n  if (!project) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Project not found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 12\n    }, this);\n  }\n  const collaborators = project.Collaborators.split(',').map(name => name.trim());\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contentimage-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: process.env.PUBLIC_URL + \"/images/\" + project.projectPictureSrc,\n        alt: project.title,\n        className: \"contentmain-img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 5\n      }, this), project.reportName && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"contentimage-overlay\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 9\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: `${process.env.PUBLIC_URL}/pdf/${project.reportName}`,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          className: \"project-button\",\n          children: \"View Report\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 1\n    }, this), \"      \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-text\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: project.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"Description\",\n        children: project.longContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 61\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 67\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"In Collaboration with\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"collabcard\",\n        children: collaborators.map((collaborator, index) => {\n          // Find the corresponding team member\n          const collabName = collaboratorData.find(member => member.name === collaborator);\n\n          // Use the team member's image if found, otherwise use a default image\n          const imageSrc = collabName ? collabName.image : process.env.PUBLIC_URL + \"/images/defaultpic.png\";\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"collabcard-content\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: imageSrc,\n                alt: project.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 19\n            }, this)\n          }, void 0, false);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"border-line\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"other-projects\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Other Projects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"project-cards\",\n        children: projectList.filter(p => p.title !== project.title) // Exclude the current project\n        .map((proj, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"project-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: process.env.PUBLIC_URL + \"/images/\" + proj.pictureSrc,\n            alt: proj.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: proj.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_c = ProjectContentPage;\nexport default ProjectContentPage;\nvar _c;\n$RefreshReg$(_c, \"ProjectContentPage\");","map":{"version":3,"names":["React","Link","collaboratorData","jsxDEV","_jsxDEV","Fragment","_Fragment","ProjectContentPage","project","projectList","children","fileName","_jsxFileName","lineNumber","columnNumber","collaborators","Collaborators","split","map","name","trim","className","src","process","env","PUBLIC_URL","projectPictureSrc","alt","title","reportName","href","target","rel","longContent","class","collaborator","index","collabName","find","member","imageSrc","image","filter","p","proj","pictureSrc","_c","$RefreshReg$"],"sources":["/Users/pg27378/Documents/Co-labwebsite/colab-test/src/Components/ProjectContentPage.js"],"sourcesContent":["import React from 'react';\nimport './ProjectContentPage.css'; // Import the CSS file\nimport { Link } from 'react-router-dom';\nimport { collaboratorData } from './CollaboratorData';\n\n\nfunction ProjectContentPage({ project, projectList}) {\n  if (!project) {\n    return <div>Project not found.</div>;\n  }\n\n  const collaborators = project.Collaborators.split(',').map((name) => name.trim());\n\n\n  return (\n    <div className=\"content-page\">\n<div className=\"contentimage-container\">\n    <img \n      src={process.env.PUBLIC_URL + \"/images/\" + project.projectPictureSrc} \n      alt={project.title} \n      className=\"contentmain-img\" \n    />\n    {project.reportName && (\n      <>\n        <div className=\"contentimage-overlay\"></div> {/* Overlay div */}\n        <a\n          href={`${process.env.PUBLIC_URL}/pdf/${project.reportName}`}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"project-button\"\n        >\n          View Report\n        </a>\n      </>\n    )}\n  </div>      <div className=\"content-text\">\n        <h2>{project.title}</h2>\n        <p className=\"Description\">{project.longContent}</p><br /><br />\n        {/* <div class=\"btn\">\n          <a href={`${process.env.PUBLIC_URL}/pdf/${project.reportName}`} className=\"pdf-button\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <div className=\"about-button-content\">View Full Report</div>\n          </a>\n        </div> */}\n        <h3>In Collaboration with</h3>\n        <div class=\"collabcard\">\n          {\n            collaborators.map((collaborator, index) => {\n\n              // Find the corresponding team member\n              const collabName = collaboratorData.find(member => member.name === collaborator);\n\n              // Use the team member's image if found, otherwise use a default image\n              const imageSrc = collabName ? collabName.image : process.env.PUBLIC_URL + \"/images/defaultpic.png\";\n\n              return (\n                <><div class=\"collabcard-content\">\n                  <img src={imageSrc} alt={project.title} />\n                </div>\n                </>\n              );\n            })}\n        </div>\n      </div>\n      <div class=\"border-line\"></div>\n      <div className=\"other-projects\">\n      <h2>Other Projects</h2>\n        <div class=\"project-cards\">\n        {projectList\n            .filter(p => p.title !== project.title) // Exclude the current project\n            .map((proj, index) => (\n              <div className=\"project-card\" key={index}>\n                <img src={process.env.PUBLIC_URL + \"/images/\" +proj.pictureSrc} alt={proj.title} />\n                <h3>{proj.title}</h3>\n              </div>\n            ))}\n        </div>\n      </div>\n\n    </div>\n\n  );\n}\n\nexport default ProjectContentPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}